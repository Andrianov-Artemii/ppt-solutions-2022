name: Push tests and checks

on: [ workflow_call ]

jobs:   

  check_yamls_equal:
    name: It's a fair game?
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_call' }}
    steps:
      - uses: actions/checkout@v2
      - name: Check actions file 
        id:  check
        run: |
          cd ${GITHUB_WORKSPACE}
          git clone https://github.com/Andrianov-Artemii/ppt-solutions-2022
          if ( diff -r --brief "${GITHUB_WORKSPACE}/.github/workflows/" "${GITHUB_WORKSPACE}/ppt-solutions-2022/favorites/" ); then
              echo "Yamls equal, It's a fair game!"
          else
              echo ::set-output name=status::failure
          fi
      - uses: Andrianov-Artemii/ppt-solutions-2022/actions/ppt-alert-bot@master
        if: steps.check.outputs.status == 'failure'
        with:
          input-keys: yml ${{ github.repository }} ${{github.event.commits[0].url}}
      - if: steps.check.outputs.status == 'failure'
        run: exit 1
        
  check_push_context:
    runs-on: ubuntu-latest
    name: Checking push conditions
    if: ${{ github.event_name != 'workflow_call' }}
    steps:
      - name: Check publication time
        id: container
        uses: Andrianov-Artemii/ppt-solutions-2022/actions/ppt-alert-bot@master
        with:
          input-keys: push ${{ github.repository }} ${{github.event.commits[0].url}}
      - name: Check publication time response
        run: |
          if [[ "${{ steps.container.outputs.status }}" != "ok" ]]; then
            echo [Error] "${{ steps.container.outputs.message }}"
            exit 1
          fi
        
  check_task_folders:
    runs-on: ubuntu-latest
    name: Check task folders exist
    needs: [check_push_context, check_yamls_equal]
    steps: 
      - uses: actions/checkout@v2
      - name: Checking for the existence of tasks-dir
        run: |
          cd ${GITHUB_WORKSPACE}
          (test -d ppt-task-0) || (echo [Error] ppt-task-0 dir not exist && exit 1)
          (test -d ppt-task-1) || (echo [Error] ppt-task-1 dir not exist && exit 1)
          (test -d ppt-task-2) || (echo [Error] ppt-task-2 dir not exist && exit 1)
          (test -d ppt-task-3) || (echo [Error] ppt-task-3 dir not exist && exit 1)
          (test -d ppt-task-4) || (echo [Error] ppt-task-4 dir not exist && exit 1)
          (test -d ppt-task-5) || (echo [Error] ppt-task-5 dir not exist && exit 1)
          echo All task folders exist!

  check_docker_files:
    runs-on: ubuntu-latest
    name: Check dockerfiles exist
    needs: [check_push_context, check_yamls_equal]
    steps: 
      - uses: actions/checkout@v2
      - name: Checking for the existence of tasks-dir
        run: |
          cd ${GITHUB_WORKSPACE}
          (test -f ppt-task-0/Dockerfile) || (echo [Error] ppt-task-0 Dockerfile not exist && exit 1)
          (test -f ppt-task-1/Dockerfile) || (echo [Error] ppt-task-1 Dockerfile not exist && exit 1)
          (test -f ppt-task-2/Dockerfile) || (echo [Error] ppt-task-2 Dockerfile not exist && exit 1)
          (test -f ppt-task-3/Dockerfile) || (echo [Error] ppt-task-3 Dockerfile not exist && exit 1)
          (test -f ppt-task-4/Dockerfile) || (echo [Error] ppt-task-4 Dockerfile not exist && exit 1)
          (test -f ppt-task-5/Dockerfile) || (echo [Error] ppt-task-5 Dockerfile not exist && exit 1)
          (test -f docker-compose.yml) || (echo [Error] root docker-compose.yml not exist && exit 1)
          echo All dockerfiles exist!
